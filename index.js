#!/usr/bin/env node
const crypto = require('crypto')
const child_process = require('child_process')
const fs = require('fs')

// TODO TS

// TODO config the constants
const IMAGE_REGEX = /(jpe?g|gif|png|svg)$/i;
// TODO figure ideal file extension
const HASH_SUFFIX = '.gen';
const IMAGEOPTIM_PATH = '/Applications/ImageOptim.app/Contents/MacOS/ImageOptim';


function canSkipCompress(filePath) {
    if (!filePath.match(IMAGE_REGEX)) {
        return true;
    }
    const hashFilePath = filePath + HASH_SUFFIX;
    if (!fsExistsSync(hashFilePath)) {
        return false;
    }
    console.debug('hash file found', hashFilePath);
    // verify hash
    const hash = crypto.createHash('sha256');
    const data = fs.readFileSync(filePath);
    hash.update(data);
    const hashCode = hash.digest('hex');

    const hashContents = fs.readFileSync(hashFilePath, 'utf-8');
    console.log(`${hashCode} in ${filePath}`);
    console.log(`${hashContents} in ${hashFilePath}`);

    return hashContents.startsWith(hashCode + '\n');
}

function fsExistsSync(filePath) {
    try {
        return fs.existsSync(filePath)
    } catch (err) {
        return false;
    }
}

function writeHashCertificate(artifactFilePath) {

    const hash = crypto.createHash('sha256');
    // TODO asyncify
    // SEE https://gist.github.com/moeiscool/fa7401e44965243f1dd42cfe5abfe015
    const input = fs.readFileSync(artifactFilePath);
    hash.update(input);
    const hashCode = hash.digest('hex');
    const hashFilePath = artifactFilePath + HASH_SUFFIX;

    console.log(`${hashCode} ${artifactFilePath} -> ${hashFilePath}`);
    fs.writeFileSync(hashFilePath, hashCode + '\n# imageOption DEV\nAutogenerated hash file', { encoding: 'utf8', flag: 'w' })

}

function main(argv) {
    if (process.platform !== 'darwin') {
        // TODO standardize logging
        console.error('Non-macOS platforms not supported. Skipping...')
        return 0;
    }

    // Check imageoptim are installed
    if (!fsExistsSync(IMAGEOPTIM_PATH)) {
        console.error('It looks like ImageOptim is not installed: ', err.message);
        console.error(IMAGEOPTIM_PATH, 'could not be found.');
        console.error('');
        console.error('');
        console.error('Install ImageOptim with:');
        console.error('');
        console.error('  brew update && brew cask install imageoptim');
        console.error('');
        return 1;
    }

    console.debug('args', argv);
    const imageQueue = argv.filter(filePath => !canSkipCompress(filePath))
    console.debug('imageQueue', imageQueue);

    if (imageQueue.length === 0) {
        console.log('No new files detected');
        return 0;
    }

    // TODO call JS directly
    // TODO bound and batch imageQueue size above max args
    console.debug('Running ImageOptim...')
    const job = child_process.execFileSync('yarn', ['imageoptim', ...imageQueue])

    // TODO if fail exit!
    // For each file write hash file
    for (const imageFilePath of imageQueue) {
        writeHashCertificate(imageFilePath);
    }
}

if (require.main === module) {
    // TODO arg handling
    process.exit(main(process.argv.slice(1)))
}